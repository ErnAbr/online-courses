**basics**
cli to init new project -> dotnet new webapi -n DotnetAPI
to add swagger -> dotnet add package Swashbuckle.AspNetCore

[Route("[controller]")] -> creates route based on controller class name without "controller"
constructor inside the controller class should be public

in Program.cs you need to builder AddControllers and AddSwaggerGen, then use app to UseSwagger and UserSwaggerUI also app.MapControllers

chaining query params -> test?testValue="testValue"

CORS settings are in program.cs <-boilerplate code

setup a DB connection string in appsettings.json and add a config in the controller

use IActionResult when you want to result a status code

beter to use namespace .Dto or .Data to improve performance of an app and not to put everything into one namespace

when setting up IRepository you need to make a connection in program.cs
for example builder.Services.AddScoped<IUserRepository, UserRepository>();

adding this to program.cs to make sure that server uses the same tokenKey:
SymmetricSecurityKey tokenKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes
    (builder.Configuration.GetSection("AppSettings:TokenKey").Value ?? ""));

TokenValidationParameters tokenValidationParameters = new TokenValidationParameters()
{
    IssuerSigningKey = tokenKey,
    ValidateIssuer = false,
    ValidateIssuerSigningKey = false,
    ValidateAudience = false
};

UseAuthentication should go before UseAuthorization
app.UseAuthentication();
app.UseAuthorization();